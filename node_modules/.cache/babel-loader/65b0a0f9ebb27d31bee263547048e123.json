{"ast":null,"code":"import _defineProperty from \"/Users/hygordias/dev/xapps/carl-zeiss/front_adm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createReducer, createActions } from 'reduxsauce';\nimport Immutable from 'seamless-immutable'; // Action Types & Creators\n\nconst _createActions = createActions({\n  authLoadRequest: null,\n  authLoadSuccess: ['token'],\n  authLoadFailure: ['error']\n}),\n      Types = _createActions.Types,\n      Creators = _createActions.Creators;\n\nexport const AuthTypes = Types;\nexport const AuthActions = Creators; // Initial State\n\nexport const INITIAL_STATE = Immutable({\n  isAuth: false,\n  token: null,\n  loading: false,\n  error: null\n}); // Reducer Functions\n\nconst authLoadRequest = state => _objectSpread({}, state, {\n  loading: true,\n  error: null\n});\n\nconst authLoadSuccess = (state, {\n  token\n}) => _objectSpread({}, state, {\n  isAuth: true,\n  token,\n  loading: false,\n  error: null\n});\n\nconst authLoadFailure = (state, {\n  error\n}) => _objectSpread({}, state, {\n  error,\n  loading: false,\n  isAuth: false,\n  token: null\n}); // Reducer\n\n\nexport const AuthReducer = createReducer(INITIAL_STATE, {\n  [Types.AUTH_LOAD_REQUEST]: authLoadRequest,\n  [Types.AUTH_LOAD_SUCCESS]: authLoadSuccess,\n  [Types.AUTH_LOAD_FAILURE]: authLoadFailure\n});","map":{"version":3,"sources":["/Users/hygordias/dev/xapps/carl-zeiss/front_adm/src/store/ducks/auth.js"],"names":["createReducer","createActions","Immutable","authLoadRequest","authLoadSuccess","authLoadFailure","Types","Creators","AuthTypes","AuthActions","INITIAL_STATE","isAuth","token","loading","error","state","AuthReducer","AUTH_LOAD_REQUEST","AUTH_LOAD_SUCCESS","AUTH_LOAD_FAILURE"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,aAAxB,QAA6C,YAA7C;AACA,OAAOC,SAAP,MAAsB,oBAAtB,C,CAEA;;uBAE4BD,aAAa,CAAC;AACxCE,EAAAA,eAAe,EAAE,IADuB;AAExCC,EAAAA,eAAe,EAAE,CAAC,OAAD,CAFuB;AAGxCC,EAAAA,eAAe,EAAE,CAAC,OAAD;AAHuB,CAAD,C;MAAjCC,K,kBAAAA,K;MAAOC,Q,kBAAAA,Q;;AAMf,OAAO,MAAMC,SAAS,GAAGF,KAAlB;AACP,OAAO,MAAMG,WAAW,GAAGF,QAApB,C,CAEP;;AAEA,OAAO,MAAMG,aAAa,GAAGR,SAAS,CAAC;AACrCS,EAAAA,MAAM,EAAE,KAD6B;AAErCC,EAAAA,KAAK,EAAE,IAF8B;AAGrCC,EAAAA,OAAO,EAAE,KAH4B;AAIrCC,EAAAA,KAAK,EAAE;AAJ8B,CAAD,CAA/B,C,CAOP;;AAEA,MAAMX,eAAe,GAAIY,KAAD,sBAAiBA,KAAjB;AAAwBF,EAAAA,OAAO,EAAE,IAAjC;AAAuCC,EAAAA,KAAK,EAAE;AAA9C,EAAxB;;AACA,MAAMV,eAAe,GAAG,CAACW,KAAD,EAAQ;AAAEH,EAAAA;AAAF,CAAR,uBACnBG,KADmB;AACZJ,EAAAA,MAAM,EAAE,IADI;AACEC,EAAAA,KADF;AACSC,EAAAA,OAAO,EAAE,KADlB;AACyBC,EAAAA,KAAK,EAAE;AADhC,EAAxB;;AAGA,MAAMT,eAAe,GAAG,CAACU,KAAD,EAAQ;AAAED,EAAAA;AAAF,CAAR,uBACpBC,KADoB;AACbD,EAAAA,KADa;AACND,EAAAA,OAAO,EAAE,KADH;AACUF,EAAAA,MAAM,EAAE,KADlB;AACyBC,EAAAA,KAAK,EAAE;AADhC,EAAxB,C,CAIA;;;AAEA,OAAO,MAAMI,WAAW,GAAGhB,aAAa,CAACU,aAAD,EAAgB;AACtD,GAACJ,KAAK,CAACW,iBAAP,GAA2Bd,eAD2B;AAEtD,GAACG,KAAK,CAACY,iBAAP,GAA2Bd,eAF2B;AAGtD,GAACE,KAAK,CAACa,iBAAP,GAA2Bd;AAH2B,CAAhB,CAAjC","sourcesContent":["import { createReducer, createActions } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\n\n// Action Types & Creators\n\nconst { Types, Creators } = createActions({\n  authLoadRequest: null,\n  authLoadSuccess: ['token'],\n  authLoadFailure: ['error'],\n});\n\nexport const AuthTypes = Types;\nexport const AuthActions = Creators;\n\n// Initial State\n\nexport const INITIAL_STATE = Immutable({\n  isAuth: false,\n  token: null,\n  loading: false,\n  error: null,\n});\n\n// Reducer Functions\n\nconst authLoadRequest = (state) => ({ ...state, loading: true, error: null });\nconst authLoadSuccess = (state, { token }) => ({\n  ...state, isAuth: true, token, loading: false, error: null\n});\nconst authLoadFailure = (state, { error }) => ({\n ...state, error, loading: false, isAuth: false, token: null\n});\n\n// Reducer\n\nexport const AuthReducer = createReducer(INITIAL_STATE, {\n  [Types.AUTH_LOAD_REQUEST]: authLoadRequest,\n  [Types.AUTH_LOAD_SUCCESS]: authLoadSuccess,\n  [Types.AUTH_LOAD_FAILURE]: authLoadFailure,\n});\n"]},"metadata":{},"sourceType":"module"}